#!/bin/bash -x

QTIMESTAMP=`date +%G%m%d_%H%M`
PORTALVAR=/tmp/clusportal_$USER$QTIMESTAMP.var

dos2unix -n $1 $PORTALVAR 2>/dev/null
source $PORTALVAR



## VASP Input check


source /opt/gridview/gridviewAppTemplate/CAE/FLUENT/FLUENT.setting
### runfile setting
#openmpi_ENVFILE intelmpi_ENVFILE mpich2_ENVFILE cr_mpi_ENVFILE mvapich2_ENVFILE debug

prefix=`basename $1|awk -F. '{print $1}'`
time=`date +%m%d%H%M%S`
username=`whoami`
pbsfile=${GAP_NAME}.pbs

if [ "$GAP_VNC" == 1 ];then
 VNC_OPTION="-vnc"
 FLUENT_VNC=""
else
 VNC_OPTION=""
 FLUENT_VNC="-g"
fi

if [ "$GAP_REMOTE_SHELL" == ssh ];then
rsh_option="-ssh"
else
rsh_option=""
fi

if [ "null$GAP_PBS_OPT" == "null" ];then
 GAP_PBS_OPT=" "
fi
if [ "null$GAP_PRE_CMD" == "null" ];then
 GAP_PRE_CMD=" "
fi
if [ "null$GAP_POST_CMD" == "null" ];then
 GAP_POST_CMD=" "
fi

################################################################################################################################################
#createpbs -t Type [-o logfile] [-pbs pbsfile]
#        -prog Program  [-proarg Program Argment] 
#       [-nnodes NodeNum] [-ppn PPN] [-wtime WallTime] [-name JobName] [-wdir WorkDir] [-q queque] [ -pbsoption 'option1:option2: ... :optionN' ]
#       [-envfile envfile1 envfile2 ... envfileN] 
#       [-precommand 'command1...command2: ... commandN'] [ -postcommand 'command1...command2: ... :commandN' )
#       [-vnc]
#       [-mpirun mpirun command] [-net Network] [-r ssh/rsh] [-bindcore] [-mpiarg MPIRUN Argment] 
#       [-cri CheckPoint Interval(Minitues)] [-ocpg Old CheckPoint Group name] [-ncpg Old CheckPoint Group name] [-ncp number CheckPoints]
#       Type should be serial,openmpi,intelmpi cr_mpi, mvapich2,mpich2
#       Network should be tcp,ib,memory,ib_memory,tcp_memory #
##############################################################################################################################################
cd ${GAP_WORK_DIR}
dollor=$
/opt/gridview/gridviewAppTemplate/createpbs -t serial -o "${GAP_OUTPUT}" -pbs ${pbsfile} \
            -prog "${GAP_PROGRAM}" \
            -proarg "${GAP_VERSION} ${FLUENT_VNC} -t${dollor}NP -cnf=${dollor}PBS_NODEFILE ${rsh_option} -mpi=${GAP_MPI_TYPE} ${GAP_PROGRAM_ARG} -i ${GAP_INPUT}" \
            -envfile  "${Fluent_ENVFILE}"     \
            -precommand "${GAP_PRE_CMD}" -postcommand "${GAP_POST_CMD}" \
            ${VNC_OPTION}  \
            -nnodes   "${GAP_NNODES}" -ppn "${GAP_PPN}" -wtime "${GAP_WALL_TIME}" -name "${GAP_NAME}" -wdir "${GAP_WORK_DIR}" -q "${GAP_QUEUE}"  \
             -pbsoption "${GAP_PBS_OPT}" \
            -ncpg '$id.ckps' -cri "${GAP_INTERVAL}" -ncp 2 

jobid=`qsub $pbsfile`
if [ $? -ne 0 ];then
echo "fail to submit  the job"
fi
if [ "${GAP_CKECK_POINT}" == 1 ];then
id=`echo $jobid|awk -F. '{print $1}' `
echo "Jobid:${id}
Cr_type:mpi_system
User_name:`whoami`
Work_dir:${wdir}
Job_batch:${pbsfile}
Cr_batch:autocr.${id}.pbs
Cr_interval:${cri}
Num_CP_save:${ncp}
" >/checkpoints/autocr/spoolautocr.${id}.Q
fi

if [ "$debug" != 1 ];then
rm -f  $pbsfile
rm -f $PORTALVAR
fi
echo $jobid | grep "^[0-9]*\.\w*" || exit 1

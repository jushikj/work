#!/bin/bash 

QTIMESTAMP=`date +%G%m%d_%H%M`
PORTALVAR=/tmp/clusportal_$USER$QTIMESTAMP.var
touch $PORTALVAR
dos2unix -n $1 $PORTALVAR 2>/dev/null
source $PORTALVAR

#GAP_MPI_NNODES=2
#GAP_MPI_PPN=2
#GAP_MPI_WALL_TIME=1:0:0
#GAP_MPI_QUEUE=high
#GAP_MPI_NAME=ANSYS_job

#GAP_MPI_MPI_TYPE=openmpi
#GAP_MPI_REMOTE_SHELL=ssh
#GAP_MPI_COMMUCATION=(ib,valure)
#GAP_MPI_SHARE_MEMORY=(1,null)
#GAP_MPI_CPU_BINDING=(1,null)
#GAP_MPI_PROGRAM=/public/software/vasp/vasp5-ompi
#GAP_MPI_PROGRAM_ARG=(null,'optin')
#GAP_MPI_WORK_DIR=/root
#GAP_MPI_INPUT=INCAR
#GAP_MPI_OUTPUT=ANSYS_job.log

#GAP_MPI_VNC=(1,null)

#GAP_MPI_CKECK_POINT=null
#GAP_MPI_INTERVAL=null

#GAP_MPI_MPI_OPT='--mca btl self'
#GAP_MPI_PBS_OPT='#PBS -j oe:#PBS -m zj@sugon.com'
#GAP_MPI_PRE_CMD='echo $HOME:echo $USER'
#GAP_MPI_POST_CMD='echo $JOB_ID:echo $PATH'


## ANSYS Input check


source /opt/gridview/gridviewAppTemplate/CAE/ANSYS_LSDYNA/ANSYS_LSDYNA.setting
### runfile setting
#openmpi_ENVFILE intelmpi_ENVFILE mpich2_ENVFILE cr_mpi_ENVFILE mvapich2_ENVFILE debug

##prefix=`basename $1|awk -F. '{print $1}'`
time=`date +%m%d%H%M%S`
username=`whoami`
pbsfile=${GAP_MPI_NAME}.pbs

if [ "null$GAP_MPI_MPI_OPT" == "null" ];then
 GAP_MPI_MPI_OPT=" "
fi
if [ "null$GAP_MPI_PBS_OPT" == "null" ];then
 GAP_MPI_PBS_OPT=" "
fi
if [ "null$GAP_MPI_PRE_CMD" == "null" ];then
 GAP_MPI_PRE_CMD=" "
fi
if [ "null$GAP_MPI_POST_CMD" == "null" ];then
 GAP_MPI_POST_CMD=" "
fi

## remote shell option
if [ ${GAP_MPI_REMOTE_SHELL} == "ssh" ];then
	RSH="-usessh"
else
	RSH=""
fi

cd ${GAP_MPI_WORK_DIR}

## MPI Type optios

if [ ${GAP_MPI_PRECISION} == "single" ];then
	PRECISION=""
else
	PRECISION="-dp"
fi

## input type option
	dos2unix ${GAP_MPI_INPUT} >& /dev/null &
	INP="i=${GAP_MPI_INPUT}"

## hpc run option	
	PRECMD='hostlist="";for node in `cat $PBS_NODEFILE | uniq`;do num=`cat $PBS_NODEFILE | grep $node | wc -l`;if [ -z $hostlist ];then hostlist=$nodeGridViewPortalColon$num;else hostlist=$hostlistGridViewPortalColon$nodeGridViewPortalColon$num;fi;done'

	RUNLIST='-dis -machines $hostlist'

## gpu acc option

## vnc option

################################################################################################################################################
#createpbs -t Type [-o logfile] [-pbs pbsfile]
#        -prog Program  [-proarg Program Argment] 
#       [-nnodes NodeNum] [-ppn PPN] [-wtime WallTime] [-name JobName] [-wdir WorkDir] [-q queque] [ -pbsoption 'option1:option2: ... :optionN' ]
#       [-envfile envfile1 envfile2 ... envfileN] 
#       [-precommand 'command1:command2: ... commandN'] [ -postcommand 'command1:command2: ... :commandN' )
#       [-vnc]
#       [-mpirun mpirun command] [-net Network] [-r ssh/rsh] [-bindcore] [-mpiarg MPIRUN Argment] 
#       [-cri CheckPoint Interval(Minitues)] [-ocpg Old CheckPoint Group name] [-ncpg Old CheckPoint Group name] [-ncp number CheckPoints]
#       Type should be serial,openmpi,intelmpi cr_mpi, mvapich2,mpich2
#       Network should be tcp,ib,memory,ib_memory,tcp_memory #
##############################################################################################################################################
cd ${GAP_MPI_WORK_DIR}

/opt/gridview/gridviewAppTemplate/createpbs -t serial -o "${GAP_MPI_OUTPUT}" -pbs ${pbsfile} -precommand "${PRECMD}" -prog "${GAP_MPI_PROGRAM}" -proarg "${MPIINPUT} -lsdynampp ${INP} ${RUNLIST} ${RSH} ${PRECISION} ${GAP_MPI_PROGRAM_ARG}" -envfile "${ANSYS_ENVFILE}"  -nnodes   "${GAP_MPI_NNODES}" -ppn "${GAP_MPI_PPN}" -wtime "${GAP_MPI_WALL_TIME}" -name "${GAP_MPI_NAME}" -wdir "${GAP_MPI_WORK_DIR}" -q "${GAP_MPI_QUEUE}" -pbsoption "${GAP_MPI_PBS_OPT}" 
sed -i 's/GridViewPortalColon/:/g' ${pbsfile}
#/opt/gridview/gridviewAppTemplate/createpbs -t "${GAP_MPI_MPI_TYPE}" -o "${GAP_MPI_OUTPUT}" -pbs ${pbsfile} \
#            -prog "${GAP_MPI_PROGRAM}" -proarg "${GAP_MPI_PROGRAM_ARG}"\
#            -envfile  "${ANSYS_ENVFILE}"     \
#            -precommand "${GAP_MPI_PRE_CMD}" -postcommand "${GAP_MPI_POST_CMD}" \
#            ${VNC_OPTION}  \
#            -nnodes   "${GAP_MPI_NNODES}" -ppn "${GAP_MPI_PPN}" -wtime "${GAP_MPI_WALL_TIME}" -name "${GAP_MPI_NAME}" -wdir "${GAP_MPI_WORK_DIR}" -q "${GAP_MPI_QUEUE}"  \
#             -pbsoption "${GAP_MPI_PBS_OPT}" \
#            -net "${GAP_MPI_NETWORK}" -r "${GAP_MPI_REMOTE_SHELL}"  ${CPU_BINDING_OPTION} -mpiarg "${GAP_MPI_MPI_OPT}"  \
#            -ncpg '$id.ckps' -cri "${GAP_MPI_INTERVAL}" -ncp 2 
#
jobid=`qsub $pbsfile`

if [ "$debug" != 1 ];then
rm -f  $pbsfile
rm -f $PORTALVAR
fi
echo $jobid | grep "^[0-9]*\.\w*" || exit 1
